#!/usr/bin/env node

/**
 * Build script to generate subreddits.ts from subreddits.txt
 * This embeds the subreddit list into the build so it works in Devvit
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

function generateSubredditsFile() {
  try {
    const projectRoot = path.join(__dirname, '..');
    const inputPath = path.join(projectRoot, 'subreddits.txt');
    const outputPath = path.join(projectRoot, 'src', 'server', 'game', 'subreddits.ts');
    
    if (!fs.existsSync(inputPath)) {
      console.error('❌ subreddits.txt file not found!');
      process.exit(1);
    }

    const fileContent = fs.readFileSync(inputPath, 'utf-8');
    
    const subreddits = fileContent
      .split('\n')
      .map(line => line.trim())
      .filter(line => line && !line.startsWith('#')) // Remove empty lines and comments
      .map(line => line.toLowerCase()); // Ensure lowercase
    
    const tsContent = `// Auto-generated file from subreddits.txt
// Do not edit this file directly - edit subreddits.txt instead
// Run 'npm run generate-subreddits' to regenerate this file
// Generated at: ${new Date().toISOString()}

export const IMAGE_SUBREDDITS: string[] = [
${subreddits.map(sub => `  '${sub}'`).join(',\n')}
];

export const SUBREDDIT_COUNT = ${subreddits.length};
`;

    // Ensure the directory exists
    const outputDir = path.dirname(outputPath);
    if (!fs.existsSync(outputDir)) {
      fs.mkdirSync(outputDir, { recursive: true });
    }
    
    // Always overwrite the file
    fs.writeFileSync(outputPath, tsContent, 'utf-8');
    
    console.log(`✅ Generated ${outputPath}`);
    console.log(`📋 Loaded ${subreddits.length} subreddits:`, subreddits.join(', '));
    console.log(`🔄 File timestamp: ${new Date().toISOString()}`);
    
  } catch (error) {
    console.error('❌ Error generating subreddits file:', error.message);
    process.exit(1);
  }
}

generateSubredditsFile();